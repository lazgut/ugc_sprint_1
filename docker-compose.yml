version: '3.5'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3.6.1'
    ports:
      - '2181:2181'
    environment:  # use docker-compose up --env-file .env.debug to debug.
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    networks:
      - development_network

  clickhouse-node1:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhousedata/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - development_network

  clickhouse-node2:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhousedata/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - development_network

  clickhouse-node3:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhousedata/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - development_network

  clickhouse-node4:
    image: yandex/clickhouse-server:20.3
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhousedata/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper
    networks:
      - development_network

  kafka:
    image: 'bitnami/kafka:3.1.2'
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 or PLAINTEXT://localhost:9092 for local debug
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false

      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - development_network

  etl_kafka_to_ch:
    container_name: etl_kafka_to_ch
    build:
      context: etl/kafka_to_ch
      dockerfile: Dockerfile
    depends_on:
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
    volumes:
      - ./.env:/opt/app/.env
    networks:
      - development_network

networks:
  development_network:
    name: development_network
    external: true